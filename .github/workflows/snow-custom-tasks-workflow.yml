# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: GitHub Actions workflow with SNOW custom tasks

#on:
#   push:
#     branches: [ main ]
   # pull_request:
   #   branches: [ main ]
#   push:
#     branches:
#       - main
#   pull_request:
#     types: [opened, synchronize, reopened]

on: workflow_dispatch
#  pull_request_target:
#    types:
#      - closed

jobs:

    build:
        # Running your workflow when a pull request merges
        # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-workflow-when-a-pull-request-merges-1
        #if: github.event.pull_request.merged == true
        name: Build
        runs-on: ubuntu-latest
        steps:           
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            
            - name: Set up JDK 11
              uses: actions/setup-java@v1
              with:
                  java-version: 11
            
            - name: Cache SonarCloud packages
              uses: actions/cache@v1
              with:
                  path: ~/.sonar/cache
                  key: ${{ runner.os }}-sonar
                  restore-keys: ${{ runner.os }}-sonar
            
            - name: Cache Maven packages
              uses: actions/cache@v1
              with:
                  path: ~/.m2
                  key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ${{ runner.os }}-m2

    test:
        #if: github.event.pull_request.merged == true
        name: Test
        needs: build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

            - name: List current directory
              run: ls -a

            - name: Run Tests with Maven
              run: mvn -B test --file pom.xml

            # run: |
            #       ls -l
            # mvn clean test

            # run: mvn test
            # mvn -B test --file ./devops-test-repo/pom.xml

            - name: What's in the target directory
              run: |
                    cd target
                    ls -a

            # - name: Sonarcloud Scan
            #   env:
            #         GITHUB_TOKEN: ${{ secrets.GHP_TOKEN }}  # Needed to get PR information, if any
            #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            #   run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=devops-test-repo

            # - name: Sonar Cloud Analysis
            #   if: success() # always() failure() success()
            #   run: >
            #       mvn -B verify -DskipTests sonar:sonar
            #       -Dsonar.projectKey=$SONAR_PROJECT_KEY
            #       -Dsonar.organization=$SONAR_ORG_KEY
            #       -Dsonar.host.url=$SONAR_URL
            #       -Dsonar.login=$SONAR_TOKEN
            #   env:
            #       GITHUB_TOKEN: ${{ secrets.GHP_TOKEN }}
            #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            #       SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
            #       SONAR_URL: ${{ secrets.SONAR_URL }}
            #       SONAR_ORG_KEY: ${{ secrets.SONAR_ORG_KEY }}

            - name: ServiceNow DevOps Sonar Scan Results
            # You may pin to the exact commit or the version.     
              uses: ServiceNow/servicenow-devops-sonar@v2.0.0
              with:
                  # ServiceNow Instance URL
                  instance-url: ${{ secrets.SN_INSTANCE_URL }}
                  # Devops Integration User Name
                  devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
                  # Devops Integration User Password
                  devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
                  # Orchestration Tool Id
                  tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
                  # Github Context
                  context-github: ${{ toJSON(github) }}
                  # Display Name of the Job
                  job-name: 'Test'
                  # Sonar Host URL
                  sonar-host-url: ${{ secrets.SONAR_URL }}
                  # Sonar Project Key
                  sonar-project-key: ${{ secrets.SONAR_PROJECT_KEY }}
                  
            #- name: Run JUnit Tests
            #  run: mvn test -Dmaven.test.failure.ignore=true surefire-report:report

            - name: ServiceNow DevOps Unit Test Results
            # You may pin to the exact commit or the version.
              uses: ServiceNow/servicenow-devops-test-report@v2.0.0
              with:
                  # Devops Integration User Name
                  devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
                  # Devops Integration User Password
                  devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
                  # ServiceNow Instance Name
                  instance-url: ${{ secrets.SN_INSTANCE_URL }}
                  # Orchestration Tool Id
                  tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
                  # Job Name
                  job-name: 'Test' # Should be same name as declared in 'name' clause of the current Stage
                  # Github Context
                  context-github: ${{ toJSON(github) }}
                  # JUnit xml report file name with path
                  xml-report-filename: target/surefire-reports/testng-results.xml # if only JUnit tests, use target/surefire-reports/testng-results.xml
                                                                                  # if both JUnit & TestNG tests, use target/surefire-reports/testng-junit-results/testng-results.xml
                  # GitHub Custom Action
                  test-type: # optional, default is JUnit
                  
#             - name: Veracode Upload And Scan
#               uses: veracode/veracode-uploadandscan-action@0.2.6
#               with:
#                   appname: 'ServiceNow DevOps App#1'
#                   createprofile: false
#                   filepath: 'target/DevOps-Test-1.39.0-SNAPSHOT.jar'
#         #           version: ${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
#                   vid: '${{ secrets.VERACODE_API_ID }}'
#                   vkey: '${{ secrets.VERACODE_API_KEY }}'
#                   #deleteincompletescan: 1
#                   scantimeout: 20

            # - name: ServiceNow DevOps Security Results
            #   uses: ServiceNow/servicenow-devops-security-result@v2.0.0
            #   with:
            #       devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
            #       devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
            #       devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
            #       instance-url: ${{ secrets.SN_INSTANCE_URL }}
            #       tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
            #       context-github: ${{ toJSON(github) }}
            #       job-name: 'Test'
            #       security-result-attributes: '{ "scanner": "${{ secrets.SCANNER_NAME }}", "applicationName": "${{ secrets.VULNERABILITY_APPLICATION_NAME }}", "securityToolId": "ae9964e847dd35504c2ce977746d43c4" }'                  

ServiceNowVeracodeSecurityScanResults:
    # jobs that must complete successfully before this job will run
    needs: test
    # type of machine to run the job on
    runs-on: ubuntu-latest
    name: ServiceNow Veracode Security Scan Results
steps:
  - name: ServiceNow DevOps Security Results
    uses: ServiceNow/servicenow-devops-security-result@v3.0.0
    with:
        # Devops Integration User Name
        devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
        # Devops Integration User Password
        devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
        # ServiceNow Instance URL
        instance-url: ${{ secrets.SN_INSTANCE_URL }}
        # Orchestration Tool Id
        tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
        # GitHub Context
        context-github: ${{ toJSON(github) }}
        # Display Name of the Job
        job-name: 'ServiceNow Veracode Security Scan Results'
        security-result-attributes: "{'scanner': 'Veracode', 'applicationName': 'VeraDemo10', 'buildVersion': '', 'securityToolId': ''}"
        # applicationName: Name of your Veracode application and is required. This attribute is applicable only for Veracode.
        # scanner: Scanning tool and is required e.g. Veracode.
        # buildVersion: Veracode Scan name / build version and is optional. This attribute is applicable only for Veracode.
        # securityToolId: Security tool onboarded in ServiceNow (sys_id of the onboarded security tool) and is optional.

ServiceNowCheckmarxOneSecurityScanResults:
    # jobs that must complete successfully before this job will run
    needs: test
    # type of machine to run the job on
    runs-on: ubuntu-latest
    name: ServiceNow Checkmarx One Security Scan Results
steps:
  - name: ServiceNow DevOps Security Results
    uses: ServiceNow/servicenow-devops-security-result@v3.0.0
    with:
        # Devops Integration User Name
        devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
        # Devops Integration User Password
        devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
        # ServiceNow Instance URL
        instance-url: ${{ secrets.SN_INSTANCE_URL }}
        # Orchestration Tool Id
        tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
        # GitHub Context
        context-github: ${{ toJSON(github) }}
        # Display Name of the Job
        job-name: 'ServiceNow Checkmarx One Security Scan Results'
        security-result-attributes: "{'scanner': 'Checkmarx One', 'projectName': '', 'projectId': '0099bb02-07af-48be-928f-5c0ff44aec0', 'scanId': '', 'securityToolId': ''}"
        # scanner: Scanning tool and is required e.g. Checkmarx One.
        # projectName/projectId: Name/Id of your Checkmarx One project and is required. This attribute is applicable only for Checkmarx One.
        # scanId: Checkmarx One scan id and is optional. This attribute is applicable only for Checkmarx One.
        # securityToolId: Security tool onboarded in ServiceNow (sys_id of the onboarded security tool) and is optional.

ServiceNowCheckmarxSASTSecurityScanResults:
    # jobs that must complete successfully before this job will run
    needs: test
    # type of machine to run the job on
    runs-on: ubuntu-latest
    name: ServiceNow Checkmarx SAST Security Scan Results
steps:
  - name: ServiceNow DevOps Security Results
    uses: ServiceNow/servicenow-devops-security-result@v3.0.0
    with:
        # Devops Integration User Name
        devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
        # Devops Integration User Password
        devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
        # ServiceNow Instance URL
        instance-url: ${{ secrets.SN_INSTANCE_URL }}
        # Orchestration Tool Id
        tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
        # GitHub Context
        context-github: ${{ toJSON(github) }}
        # Display Name of the Job
        job-name: 'ServiceNow Checkmarx SAST Security Scan Results'
        security-result-attributes: "{'scanner': 'Checkmarx SAST', 'projectId': '3285', 'securityToolId': ''}"
        # scanner: Scanning tool and is required e.g. Checkmarx SAST.
        # projectId: Id of your Checkmarx SAST project and is required. This attribute is applicable only for Checkmarx SAST.
        # securityToolId: Security tool onboarded in ServiceNow (sys_id of the onboarded security tool) and is optional.
        
    integrationTest:
        #if: github.event.pull_request.merged == true
        name: Integration Tests
        needs: [ServiceNowVeracodeSecurityScanResults, ServiceNowCheckmarxOneSecurityScanResults, ServiceNowCheckmarxSASTSecurityScanResults]
        runs-on: ubuntu-latest
        steps:
            - name: ServiceNow DevOps Register Artifact
            # You may pin to the exact commit or the version.          
              uses: ServiceNow/servicenow-devops-register-artifact@v2.0.0
              with:
                  # Devops Integration User Name
                  devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
                  # Devops Integration User Password
                  devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
                  # ServiceNow Instance URL
                  instance-url: ${{ secrets.SN_INSTANCE_URL }}
                  # Orchestration Tool Id
                  tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
                  # Display Name of the Job
                  job-name: 'Integration Tests'
                  # Github Context
                  context-github: ${{ toJSON(github) }}
                  # List of Artifacts to be registered
                  artifacts: '[
                      {
                          "name": "app-devops.jar",
                          "version": "1.${{ github.run_number }}",
                          "semanticVersion": "1.${{ github.run_number }}.0",
                          "repositoryName": "${{ github.repository }}"
                      },
                      {
                          "name": "app-devops-integrations.jar",
                          "version": "1.${{ github.run_number }}",
                          "semanticVersion": "1.${{ github.run_number }}.0",
                          "repositoryName": "${{ github.repository }}"
                      },
                      {
                          "name": "app-devops-workspace.jar",
                          "version": "1.${{ github.run_number }}",
                          "semanticVersion": "1.${{ github.run_number }}.0",
                          "repositoryName": "${{ github.repository }}"
                      }
                  ]'

            - name: ServiceNow DevOps Register Package
            # You may pin to the exact commit or the version.           
              uses: ServiceNow/servicenow-devops-register-package@v2.0.0
              with:
                  # ServiceNow Devops Integration User Name
                  devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
                  # ServiceNow Devops Integration User Password
                  devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
                  # ServiceNow Instance URL
                  instance-url: ${{ secrets.SN_INSTANCE_URL }}
                  # Orchestration Tool Id of the tool created in ServiceNow
                  tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
                  # Github Context
                  context-github: ${{ toJSON(github) }}
                  # List of Artifacts in JSON format
                  artifacts: '[
                      {
                          "name": "app-devops.jar",
                          "version": "1.${{ github.run_number }}",
                          "semanticVersion": "1.${{ github.run_number }}.0",
                          "repositoryName": "${{ github.repository }}"
                      },
                      {
                          "name": "app-devops-integrations.jar",
                          "version": "1.${{ github.run_number }}",
                          "semanticVersion": "1.${{ github.run_number }}.0",
                          "repositoryName": "${{ github.repository }}"
                      },
                      {
                          "name": "app-devops-workspace.jar",
                          "version": "1.${{ github.run_number }}",
                          "semanticVersion": "1.${{ github.run_number }}.0",
                          "repositoryName": "${{ github.repository }}"
                      }
                  ]'
                  # Name of the Package that contains list of artifacts
                  package-name: 'app-devops-change-velocity.war'
                  # Display Name of Job
                  job-name: 'Integration Tests'

ServiceNowDevOpsChange:
  # jobs that must complete successfully before this job will run
  needs: integrationTest
  # type of machine to run the job on
  runs-on: ubuntu-latest
  name: 'ServiceNow DevOps Change'
  steps:
    - name: ServiceNow Change
      uses: ServiceNow/servicenow-devops-change@v3.0.0
      with:
        # Devops Integration Token
        devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
        # ServiceNow Instance URL
        instance-url: ${{ secrets.SN_INSTANCE_URL }}
        # Orchestration Tool Id
        tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
        # GitHub Context
        context-github: ${{ toJSON(github) }}
        # Display Name of the Job
        job-name: 'ServiceNow DevOps Change'
        change-request: '{"attributes":{"requested_by":{"name": "DevOps System"},"assignment_group":{"name": "Change Management"},"priority": "2","comments": "This is a sample pipeline script to be added in your change step","work_notes": "Update this to work_notes","start_date": "2023-09-07 11:59:59","end_date": "2023-09-09 11:59:59"}}'
        # You can specify the requested_by attribute either with name or sys_id. Example: "requested_by":{"name": "Test User"} or "requested_by": "62826bf03710200044e0bfc8bcbe5df1"
        # You can specify the assignment_group attribute either with name or sys_id. Example: "assignment_group":{"name": "Change Approval Team"} or "assignment_group": "5f721d93c0a8010e015533746de18bf9"
        # start_date: This is the planned start date
        # end_date: This is the planned end date

    postdeploy:
        #if: github.event.pull_request.merged == true
        name: Post Deploy
        needs: ServiceNowDevOpsChange
        runs-on: ubuntu-latest
        steps:
            - name: Run deployment scripts
              run: echo Completed Deployment
