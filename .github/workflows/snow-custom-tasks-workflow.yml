# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: GitHub Actions workflow with SNOW custom tasks

#on:
#   push:
#     branches: [ main ]
   # pull_request:
   #   branches: [ main ]
#   push:
#     branches:
#       - main
#   pull_request:
#     types: [opened, synchronize, reopened]

on: workflow_dispatch
#  pull_request_target:
#    types:
#      - closed

jobs:
    build:
        # Running your workflow when a pull request merges
        # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-workflow-when-a-pull-request-merges-1
        #if: github.event.pull_request.merged == true
        name: Build
        runs-on: ubuntu-latest
        steps:           
            - uses: actions/checkout@v2
              with:
                 fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

            - name: Set up JDK 11
              uses: actions/setup-java@v1
              with:
                 java-version: 11

    ServiceNowVeracodeSecurityScanResults:
        # jobs that must complete successfully before this job will run
        needs: build
        # type of machine to run the job on
        runs-on: ubuntu-latest
        name: ServiceNow Veracode Security Scan Results
        steps:
          - name: ServiceNow DevOps Security Results
            uses: ServiceNow/servicenow-devops-security-result@dev
            with:
               # Devops Integration User Name
               devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
               # Devops Integration User Password
               devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
               # ServiceNow Instance URL
               instance-url: ${{ secrets.SN_INSTANCE_URL }}
               # Orchestration Tool Id
               tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
               # GitHub Context
               context-github: ${{ toJSON(github) }}
               # Display Name of the Job
               job-name: 'ServiceNow Veracode Security Scan Results'
               ##security-result-attributes: "{'scanner': 'Veracode', 'applicationName': 'VeraDemo10', 'buildVersion': '', 'securityToolId': ''}"
               security-result-attributes: '{"scanner": "Veracode", "applicationName": "VeraDemo10"}'
               # applicationName: Name of your Veracode application and is required. This attribute is applicable only for Veracode.
               # scanner: Scanning tool and is required e.g. Veracode.
               # buildVersion: Veracode Scan name / build version and is optional. This attribute is applicable only for Veracode.
               # securityToolId: Security tool onboarded in ServiceNow (sys_id of the onboarded security tool) and is optional.

    ServiceNowCheckmarxOneSecurityScanResults:
        # jobs that must complete successfully before this job will run
        needs: ServiceNowVeracodeSecurityScanResults
        # type of machine to run the job on
        runs-on: ubuntu-latest
        name: ServiceNow Checkmarx One Security Scan Results
        steps:
          - name: ServiceNow DevOps Security Results
            uses: ServiceNow/servicenow-devops-security-result@dev
            with:
               # Devops Integration User Name
               devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
               # Devops Integration User Password
               devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
               # ServiceNow Instance URL
               instance-url: ${{ secrets.SN_INSTANCE_URL }}
               # Orchestration Tool Id
               tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
               # GitHub Context
               context-github: ${{ toJSON(github) }}
               # Display Name of the Job
               job-name: 'ServiceNow Checkmarx One Security Scan Results'
               ##security-result-attributes: "{'scanner': 'Checkmarx One', 'projectName': '', 'projectId': '0099bb02-07af-48be-928f-5c0ff44aec05', 'scanId': '', 'securityToolId': ''}"
               security-result-attributes: '{"scanner": "Checkmarx One", "projectId": "0099bb02-07af-48be-928f-5c0ff44aec0"}'
               # scanner: Scanning tool and is required e.g. Checkmarx One.
               # projectName/projectId: Name/Id of your Checkmarx One project and is required. This attribute is applicable only for Checkmarx One.
               # scanId: Checkmarx One scan id and is optional. This attribute is applicable only for Checkmarx One.
               # securityToolId: Security tool onboarded in ServiceNow (sys_id of the onboarded security tool) and is optional.

    ServiceNowCheckmarxSASTSecurityScanResults:
        # jobs that must complete successfully before this job will run
        needs: ServiceNowCheckmarxOneSecurityScanResults
        # type of machine to run the job on
        runs-on: ubuntu-latest
        name: ServiceNow Checkmarx SAST Security Scan Results
        steps:
          - name: ServiceNow DevOps Security Results
            uses: ServiceNow/servicenow-devops-security-result@dev
            with:
               # Devops Integration User Name
               devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
               # Devops Integration User Password
               devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
               # ServiceNow Instance URL
               instance-url: ${{ secrets.SN_INSTANCE_URL }}
               # Orchestration Tool Id
               tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
               # GitHub Context
               context-github: ${{ toJSON(github) }}
               # Display Name of the Job
               job-name: 'ServiceNow Checkmarx SAST Security Scan Results'
               ##security-result-attributes: "{'scanner': 'Checkmarx SAST', 'projectId': '3285', 'securityToolId': ''}"
               security-result-attributes: '{"scanner": "Checkmarx SAST", "projectId": "3285"}'
               # scanner: Scanning tool and is required e.g. Checkmarx SAST.
               # projectId: Id of your Checkmarx SAST project and is required. This attribute is applicable only for Checkmarx SAST.
               # securityToolId: Security tool onboarded in ServiceNow (sys_id of the onboarded security tool) and is optional.

    ServiceNowDevOpsChange:
        # jobs that must complete successfully before this job will run
        needs: [ServiceNowVeracodeSecurityScanResults, ServiceNowCheckmarxOneSecurityScanResults, ServiceNowCheckmarxSASTSecurityScanResults]
        # type of machine to run the job on
        runs-on: ubuntu-latest
        name: 'ServiceNow DevOps Change'
        steps:
           - name: ServiceNow Change
             uses: ServiceNow/servicenow-devops-change@dev
             with:
               # Devops Integration Token
               devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
               # ServiceNow Instance URL
               instance-url: ${{ secrets.SN_INSTANCE_URL }}
               # Orchestration Tool Id
               tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
               # GitHub Context
               context-github: ${{ toJSON(github) }}
               # Display Name of the Job
               job-name: 'ServiceNow DevOps Change'
               change-request: '{"attributes":{"requested_by":{"name": "DevOps System"},"assignment_group":{"name": "Change Management"},"priority": "2","comments": "This is a sample pipeline script to be added in your change step","work_notes": "Update this to work_notes","start_date": "2023-09-07 11:59:59","end_date": "2023-09-09 11:59:59"}}'
               # You can specify the requested_by attribute either with name or sys_id. Example: "requested_by":{"name": "Test User"} or "requested_by": "62826bf03710200044e0bfc8bcbe5df1"
               # You can specify the assignment_group attribute either with name or sys_id. Example: "assignment_group":{"name": "Change Approval Team"} or "assignment_group": "5f721d93c0a8010e015533746de18bf9"
               # start_date: This is the planned start date
               # end_date: This is the planned end date

