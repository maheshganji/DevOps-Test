# This workflow uses ServiceNow custom actions that are certified by ServiceNow.

name: CD GitHub workflow

on:
  workflow_run:
    workflows: [ "CI GitHub workflow" ]
    types: [completed]

jobs:
  registerPackage:
    name: 'Register Package'
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: ServiceNow DevOps Register Package
    # You may pin to the exact commit or the version.           
      uses: ServiceNow/servicenow-devops-register-package@v2.0.0
      with:
          # ServiceNow Devops Integration User Name
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          # ServiceNow Devops Integration User Password
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Orchestration Tool Id of the tool created in ServiceNow
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # Github Context
          context-github: ${{ toJSON(github) }}
          # List of Artifacts in JSON format
          artifacts: '[
              {
                  "name": "app-devops.jar",
                  "version": "1.${{ github.run_number }}",
                  "semanticVersion": "1.${{ github.run_number }}.0",
                  "repositoryName": "${{ github.repository }}"
              }
          ]'
          # Name of the Package that contains list of artifacts
          package-name: 'app-devops-change-velocity.war'
          # Display Name of Job
          job-name: 'Register Package'

  change:
    name: 'Change'
    needs: registerPackage
    runs-on: ubuntu-latest
    steps:     
    - name: ServiceNow DevOps Change Automation
    # You may pin to the exact commit or the version.            
      uses: ServiceNow/servicenow-devops-change@v2.0.0
      with:
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Devops Integration User Name
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          # Devops Integration User Password
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # Display Name of the Job
          job-name: 'Change'
          # Github Context
          context-github: ${{ toJSON(github) }}
          # The max. time in seconds to wait until the action should fail.
          timeout: 3600 # optional, default is 3600
          # The time in seconds to wait between trying the API.
          interval: 100 # optional, default is 100
          # The customized inputs to create change with the requested details.
          changeCreationTimeOut: 3600
          abortOnChangeCreationFailure: 'false'
          abortOnChangeStepTimeout: 'false'
          change-request: '{
            "attributes": {
              "requested_by": {
                "name": "DevOps System"
              },
              "assignment_group": {
              "name": "Change Management"
              },
              "priority": "2",
              "comments": "This is a sample pipeline script to be added in your change step",
              "work_notes": "Update this to work_notes",
              "start_date": "2023-09-07 11:59:59",
              "end_date": "2023-09-09 11:59:59"
            }
          }'
          
  # uncomment below lines of code to create change request using deployment gates, indent code if necessary
  #         deployment-gate: '{"environment":"prod", "jobId":"deploy", "jobName":"Deploy"}'
  # deploy:
  #   name: 'Deploy'
  #   needs: change
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Run deployment scripts
  #     run: echo 'Deployment step in progress...'

  deploy:
    name: 'Deploy'
    needs: change
    runs-on: ubuntu-latest
    steps:
    - name: Run deployment scripts
      run: echo 'Deployment step in progress...'
